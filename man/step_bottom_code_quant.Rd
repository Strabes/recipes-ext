% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bottom_code_quant.R
\name{step_bottom_code_quant}
\alias{step_bottom_code_quant}
\title{Bottom code numeric features based on quantile}
\usage{
step_bottom_code_quant(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  ref_val = NULL,
  prob = 0.02,
  skip = FALSE,
  id = recipes::rand_id("bottom_code_quant")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are affected by the step. See \code{\link[recipes:selections]{selections()}}
for more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{ref_val}{A float, learned from the training data,
representing the \code{prob} quantile of the predictor.}

\item{prob}{A float providing the quantile at which to bottom code}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake.recipe()}}? While all operations are baked
when \code{\link[recipes:prep]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations}

\item{id}{A character string that is unique to this step to identify it.}
}
\description{
\code{step_bottom_code_quant} creates a \emph{specification} of a recipe
step that will bottom code numeric data using a quantile learned
on a training set.
}
